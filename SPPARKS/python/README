This directory contains Python code which wraps SPPARKS as a library
and allows the SPPARKS library interface to be invoked from Python,
either from a script or interactively.

Details on the Python interface to SPPARKS and how to build SPPARKS as
a shared library, for use with Python, are given in
doc/Section_python.html and in doc/Section_start.html#start_5.

Basically you need to follow these steps in the src directory:

% make makeshlib                # creates Makefile.shlib
% make -f Makefile.shlib g++    # build for whatever machine target you wish
% make install-python           # may need to do this via sudo

You can replace the last step with running the python/install.py
script directly to give you more control over where two relevant files
are installed, or by setting environment variables in your shell
script.  See doc/Section_python.html for details.

You can then launch Python and instantiate an instance of SPPARKS:

% python
>>> from spparks import spparks
>>> spk = spparks()

If that gives no errors, you have succesfully wrapped SPPARKS with
Python.  See doc/Section_python.html#py_5 for tests you can then use
to run SPPARKS both in serial or parallel thru Python.

-------------------------------------------------------------------

Once you have successfully wrapped SPPARKS, you can run the Python
scripts in the examples sub-directory:

trivial.py          read/run a SPPARKS input script thru Python
demo.py	  	    invoke various SPPARKS library interface routines

-------------------------------------------------------------------

You can run a particular script in either of the following ways:

% trivial.py in.ising
% python -i trivial.py in.ising

The former assumes that you have changed the first line of the script
to point to the Python installed on your box.

Run the Python scripts with the following SPPARKS input scripts and
arguments:

trivial.py in.ising
demo.py

You can un-comment the Pypar calls if you want to run these in
parallel.  Then, for example, you can type:

% mpirun -np 4 trivial.py in.ising
% mpirun -np 4 python trivial.py in.ising

Each script has more documentation in the file that explains how to
use it and what it is doing.
